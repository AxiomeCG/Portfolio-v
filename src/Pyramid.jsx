/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef} from 'react';
import {Plane, useGLTF, useScroll} from '@react-three/drei';
import {useFrame} from '@react-three/fiber';
import {landingPageConfig, showcaseConfig, state} from './state.js';
import {useSnapshot} from 'valtio';
import gsap from "gsap";
export function Pyramid(props) {
  const {nodes, materials} = useGLTF('/pyramid-rounded2.glb');

  const meshRef = useRef();

  const scroll = useScroll();


  useFrame((state, delta) => {
    if (props.progress === 0) {
      meshRef.current.rotation.y += delta * 0.5;
      meshRef.current.rotation.x += delta * 0.1;
    } else {
      meshRef.current.rotation.z -= delta * 0.25;

    }
  })
  const snapshot = useSnapshot(state)



  return (
    <group {...props} dispose={null}>
      <mesh ref={meshRef}
            castShadow
            receiveShadow
            geometry={nodes.Cone.geometry}
      >
        {props.children}
      </mesh>


    </group>
  );
}

useGLTF.preload('/pyramid-rounded2.glb');
