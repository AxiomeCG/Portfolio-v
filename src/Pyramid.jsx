/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef} from 'react';
import {Environment, MeshTransmissionMaterial, useGLTF, useTexture, Text} from '@react-three/drei';
import {useFrame, useThree} from '@react-three/fiber';
import {useControls} from 'leva';
import {Color, PMREMGenerator, Spherical} from 'three';
import {landingPageConfig, showcaseConfig, state} from "./state.js";
import {useSnapshot} from "valtio";

export function Pyramid(props) {
    const {nodes, materials} = useGLTF('/pyramid-rounded2.glb');

    const meshRef = useRef();


    useFrame((state, delta) => {
        meshRef.current.rotation.y += delta *0.5;
        meshRef.current.rotation.x += delta *0.1;
    })
    const snapshot = useSnapshot(state)

    const config = snapshot.mode === 'landing' ? landingPageConfig : showcaseConfig



    return (
        <group {...props} dispose={null}>
            <mesh ref={meshRef}
                  castShadow
                  receiveShadow
                  geometry={nodes.Cone.geometry}
            >
                <MeshTransmissionMaterial envMapIntensity={3} {...config} />
            </mesh>
        </group>
    );
}

useGLTF.preload('/pyramid-rounded2.glb');
